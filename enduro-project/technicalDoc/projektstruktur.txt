This is a basic description of most files in the source directory.
As well as describes the structure of the map hierarchy.


/src/
	/src/enduro
		/src/enduro/gui
			/src/enduro/gui/RegistrationGUI.java

			   Provides a GUI for the Enduro time registration program.
			   Det grafiska gränssnittet för registreringsprogrammet.

			/src/enduro/gui/StoredTime.java


			/src/enduro/gui/RegistrationTextField.java

			   The text field in which the user enters text.
			   Text fältet där användaren skriver in text.
			  

			/src/enduro/gui/RegistrationButton.java


			/src/enduro/gui/RegistrationTextArea.java

			   An area displaying the output of the registration GUI.
			   Utrymmet där de inskrivna resultaten visas.

			/src/enduro/gui/UndoButton.java

			   Button for undo in GUI
			   Ångra knapp.

		/src/enduro/Registration.java

		   Program for registering start and finish times in an Enduro race.
		   Registreringsprogram för start och måltider.

		/src/enduro/racer
			/src/enduro/racer/Racer.java

			   A basic class that represents all information about the racer - number, extra information and lapse times.
			   The only presumption the class does based on the string in the constructor is that the first element is the number.
			   
			   The class implements Comparable<Racer> based on the start number.
			   
			   En grundläggande klass för att representera all information om en tävlande - startnummer, varvtider osv.
			   Det enda som klassen antar baseras på det första elementet i strängen i konstruktorn är startnumret.
			   
			   Klassen implementerar Comparable<Racer> baserat på startnumret. 

			/src/enduro/racer/printer
				/src/enduro/racer/printer/RacerPrinter.java

				   a printer interface to print all relevant information for a race,
				   both line by line for each racer as well as printing the overlaying "header" information.
				   
				   Ett interface för utskrift av all relevant information för en tävling, såväl information för
				   samtliga åkare och den övre, titel-raden.

				/src/enduro/racer/printer/StageRacePrinter.java

				   prints a stage race with each stage included and so forth.
				   
				   Implementerar RacerPrinter och används vid etapplopp.

				/src/enduro/racer/printer/LapRacePrinter.java

				   the default lap race printer - it prints all lapses and other relevant information.
				   
				   Implementerar RacerPrinter och används vid varvlopp.

				/src/enduro/racer/printer/SortedLapRacePrinter.java

				   Prints a sorted list (that is, a list with positions printed out, but no errors).
				   Requires a lap race model for correct input, but no assumptions are made.
				   
				   Skriver ut en sorterad lista baserad på en osorterad varvloppsresultatlista.

				/src/enduro/racer/printer/SortedStageRacePrinter.java

				   Prints a sorted (that is, no errors and position) of a racer.
				   
				   Skriver ut en sorterad lista baserad på en osorterad etapploppsresultatlista.

			/src/enduro/racer/comparators
				/src/enduro/racer/comparators/DecorationCompare.java

				   This is the abstract decorationcompare class.
				   All subclasses of this class implements the Decorator design pattern
				   (see: http://en.wikipedia.org/wiki/Decorator_pattern )
				   
				   Meaning that they can be combined and supplant each other, eg. if
				   one compare returns 0 then it falls back to a lesser important one until either
				   something other than 0 is obtained - or if the next fallback is null - in which case it returns 0.
				   
				   Subclasses should implement a basic constructor in addition to the required one - 
				   sending null to the super constructor means "no fallback"
				   
				   En abstract decorationcompare-klass(http://en.wikipedia.org/wiki/Decorator_pattern). Alla 
				   subklasser till denna klass implementerar Decorator mönstret.
				   
				   Detta innebär att de kan kombineras och ersätta varandra. Till exempel om en jämförelse
				   returnerar 0 så faller den tillbaka på en inte lika viktigt tills antingen något returnerar
				   något skilt från 0 eller något returnerar null, då 0 returneras 
				   
				   Subklasser skall implmentera en enkel konstruktor tillsammans med den nödvändiga, där null 
				   returneras till super-klassen om ingen återgång finns tillgänglig. 
				   
				   

				/src/enduro/racer/comparators/RunnerCheckTotalTimeMax.java


				/src/enduro/racer/comparators/RunnerTotalTimeComparator.java

				   a non-naive comparison class that computes and compares the total time between two Racer classes.
				   this class is able to handle if finishtime / starttime doesn't exist in either or both and the comparison reflects the result.
				   
				   En icke-naiv jämförelse klass som beräknar och jämför den totala tiden mellan två Racer klasser.
				   Denna klass kan hantera om finishtime / starttime inte finns i någon eller båda och jämförelsen speglar resultatet.
				   

				/src/enduro/racer/comparators/RunnerLapseComparator.java

				   a naive comparison class that compares the size of finishtime, presumed to be how many lapses completed.
				   Ignores error in output and all other unrelated stuff.
				   
				   En naiv jämförelse klass som jämför storleken på måltider, vilket antas vara hur många varv avklarade. 
				   Ignorerar fel i utfilen och alla andra icke-relevanta saker.

				/src/enduro/racer/comparators/RunnerNumberComparator.java


			/src/enduro/racer/RacerSorter.java

			   This class handles the comparison between Racers based upon a set specific list of comparison critera
			   (represented as a Comparator<Racer> class-instance). The output is corresponding to a "class".
			   It uses the printer classes in enduro.racer.printer to output correct data.
			   
			   Klassen hanterar jämförelse mellan tävlande baserat på en lista med jämförelseklasser för ett specifikt set (representerat av 
			   en Compartor<Racer> klass). Resultatet motsvarar en klass och använder printer klassen för att skapa korrekt data.

			/src/enduro/racer/InputHandler.java

			   This class has a number of public void functions that adds name files, finish time files and start time files
			   and adds them to internal lists. This class parses these files and gives as output the final output file content.
			   
			   Klassen består av ett antal publika void funktioner som summerar namn-filer, mål-filer och start-filer, för att utifrån dessa
			   skapa en intern lista. Klassen parsar sedan dessa och skapar till slut den innehållet till den färdiga utfilen.

			/src/enduro/racer/Time.java

			   Utility class for representing time.
			   
			   Klass för att representera en tid.

			/src/enduro/racer/configuration
				/src/enduro/racer/configuration/ConfigParser.java

				   a basic config parser. It reads by default from config.conf in the CLASSPATH
				   (but can be configured otherwise)
				   
				   It reads value pairs of the type A:B where B becomes the value and A the key.
				   default values for race, sorting, input, laps and minimumTime (case
				   sensative) exists, but older key value pairs gets deleted if new appears.
				   Comments ( // )and empty lines are ignored.
				   
				   A parse error results in continued read. Errors can be polled by getError().
				   
				   Klass som används för att läsa in konfigurationer från config.conf filen i CLASSPATH. 
				   
				   Den läser värden som paras ihop enligt formatet A:B där A är nyckeln och B är värdet.
				   Standard värden för tävling, sortering, indata, varv, och minimitid finns, men äldre
				   värden raderas om nya upptäcks. Utkommentarede rader(//) och tomma rader ignoreras.
				   
				   Eventuella fel under parsningen påverkar inte inläsningen. Fel kan hämtas med metoden getError().

		/src/enduro/TxtToHtml.java
					
					Omvandlar resultat i .txt-format till en tabell i .html-format för läsning via webläsare.

		/src/enduro/MainClass.java

		   this is the main class. it parses a command line of the type -COMMAND KEY
		   where COMMAND may be config, list and output.
		   The config file is which config file which should be read.
		   The input file is the file which the program reads from, which previous consistency
		   (first file: name file, second file: start file and the following lines finish time files)
		   The output is where the output should be written
		   The result files listed in list.txt are outputted as html files 
		   
		   Det här är huvud klassen. Den läser in en kommandorad med formatet -KOMMANDO NYCKEL, där
		   KOMMANDO kan vara sökvägen till config-, input-, list- eller outputfilen.
		   input är sökvägen till infilen.
		   config är konfigurationsfilen.
		   output är vart resultatet ska skrivas ut.
		   list innehåller resultat-filer som skrivs i html-format.		   

